
name: release-please
on:
  push:
    branches:
      - main
jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      tag_name: ${{ steps.release.outputs.tag_name }}
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - name: Get Token
        id: get_workflow_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.CICD_APP_ID }}
          private-key: ${{ secrets.CICD_APP_PRIVKEY }}
          repositories: ${{ github.event.repository.name }}
      - name: Run release-please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ steps.get_workflow_token.outputs.token }}
          config-file: release-please-config.json
  build-and-publish:
    needs: release-please
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Java and Maven
        uses: s4u/setup-maven-action@v1.18.0
        with:
          java-version: "21"
          java-distribution: temurin
      - name: Build and package
        run: mvn clean package
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.release-please.outputs.tag_name }}
          files: target/DynaLog4J-*.jar
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # Enable multi-platform builds
          platforms: linux/amd64,linux/arm64
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          username: ${{ github.actor }}
          registry: ghcr.io
      - name: Extract version from tag
        id: extract-version
        run: |-
          VERSION=$(echo ${{ needs.release-please.outputs.tag_name }} | sed 's/^v//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Build and push multi-architecture Docker image
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          tags: |-
            ghcr.io/${{ github.repository_owner }}/dynalog4j:latest
            ghcr.io/${{ github.repository_owner }}/dynalog4j:${{ steps.extract-version.outputs.version }}
          push: true
          context: .
          # Optimize build with build arguments
          build-args: |
            BUILDKIT_INLINE_CACHE=1
